params {
  email                             = ""
  executor                          = "slurm"
  runtime                           = "conda" // conda, docker, singularity
  storeDir                          = "$WORK/_data/outputs/results"
  publishDir                        = "$WORK/_data/outputs/publish"
  traceDir                          = ""
  tempDir                           = ""
  containerCacheDir                 = ""
  q2cacheDir                        = "$WORK/_data/outputs/cache"
  q2cacheDirExists                  = "ok"
  inputReads                        = "" // key to the reads in the q2CacheDir
}

process {
  withLabel: needsInternet {
    module = ""
  }
}

includeConfig 'conf/tools.config'
includeConfig 'conf/resources.config'

def timestamp = new java.util.Date().format( 'yyyyMMddHHmmss' )
trace {
    enabled   = false
    file      = "${params.traceDir}/${timestamp}_trace.txt"
}
timeline {
    enabled   = false
    file      = "${params.traceDir}/${timestamp}_timeline.html"
}
report {
    enabled   = false
    file      = "${params.traceDir}/${timestamp}_report.html"
}
dag {
    enabled   = false
    file      = "${params.traceDir}/${timestamp}_dag.svg"
}

profiles {
  slurm {
    executor {
      name = "slurm"
      perCpuMemAllocation = true
    }
    if (params.runtime == "conda" ) {
      includeConfig 'conf/conda.config'
    } else if (params.runtime == "docker") {
      includeConfig 'conf/docker.config'
    } else if (params.runtime == "singularity") {
      includeConfig 'conf/singularity.config'
    } else {
      // error out
    }
    
  }
}

env {
  NUMBA_DISABLE_INTEL_SVML = 1
}

tower {
  accessToken                   = ''
  endpoint                      = ''
  enabled                       = false
}
