params {
    // Default for all workflow modules
    fondue {
        clusterOptions                  = ""
        paired                          = true
        filterEmpty                     = true
    }

    read_simulation {
        clusterOptions                  = ""
        sampleCount                     = 2
        seed                            = 100
        nGenomes                        = 4
        readCount                       = 10000000
        abundance                       = "uniform"
        gc_bias                         = true
        sampleGenomes                   = ""
        sampleNames                     = (1..params.read_simulation.sampleCount).toList().collect { i -> "sample${i}"}.join(' ')
        taxon                           = ""
    }

    read_subsampling {
        enabled                         = false
        paired                          = true
        fraction                        = 0.8
    }

    read_qc {
        fastp {
            disableQualityFiltering       = false
            deduplicate                   = false
            disableAdapterTrimming        = true
            enableBaseCorrection          = true
            additionalFlags               = ""
        }
    }

    host_removal {
        enabled                         = false
        human                           = true
        clusterOptions                  = ""
        database {
            cache                         = ""
            key                           = ""
        }
        mode                            = "local"
        sensitivity                     = "sensitive"
        ref_gap_open_penalty            = 5
        ref_gap_ext_penalty             = 3
    }

    sample_filtering {
        enabled                         = false
        minReads                        = 1000
    }

    genome_assembly {
        enabled                         = true
        clusterOptions                  = ""
        assembler                       = "megahit"
        clusterOptions                  = ""
        fetchArtifact                   = false
        megahit {
            presets                       = "meta-large"
            kList                         = "21 29 39 59 79 99 119 141"
            minContigLen                  = 200
            additionalFlags               = ""
        }
        spades {
            k                             = "auto"
            debug                         = false
            covCutoff                     = "off"
            additionalFlags               = "--p-meta"
        }
        filtering {
            enabled                       = true
            removeEmpty                   = true
            lengthThreshold               = 500
        }
    }

    assembly_qc {
        enabled                         = true
        useMappedReads                  = false
    }

    binning {
        enabled                         = false
        clusterOptions                  = ""
        fetchArtifact                   = false
        qc {
            busco {
                enabled                       = false
                clusterOptions                = ""
                mode                          = "genome"
                lineageDatasets               = "bacteria_odb12"
                additionalFlags               = ""
                database {
                    types                       = "prok" // prok, euk, virus
                    cache                       = ""
                    key                         = ""
                }
            }
            filtering {
                enabled                       = false
                condition                     = "complete>50 AND dataset=\'bacteria_odb12\'"
                exclude_ids                   = false
                fetchArtifact                 = false
            }
        }
    }

    dereplication {
        enabled                         = true
        clusterOptions                  = ""
        threshold                       = 0.99
        sourmash {
            clusterOptions                = ""
            ksizes                        = 35
            scaled                        = 100
            trackAbundance                = true
        }
        fetchArtifact                   = false
    }

    mag_abundance {
        enabled                         = true
        fetchArtifact                   = false
        clusterOptions                  = ""
        metric                          = "tpm"
        min_mapq                        = 42
        min_query_len                   = 0
        min_base_quality                = 0
    }

    taxonomic_classification {
        enabledFor                      = "" // reads, contigs, mags, derep
        fetchArtifact                   = false
        kraken2 {
            clusterOptions                = ""
            database {
                cache                       = ""
                key                         = ""
                collection                  = ""
            }
            memoryMapping                 = false
            additionalFlags               = ""
        }
        bracken {
            enabled                       = true
            clusterOptions                = ""
            database {
                cache                       = ""
                key                         = ""
            }
            threshold                     = 0
            readLength                    = 100
            level                         = "S"
        }
        feature_selection {
            coverageThreshold             = 0.1
        }
    }

    functional_annotation {
        enabledFor                      = "" // contigs, mags, derep
        ortholog_search {
            clusterOptions                = ""
            fetchArtifact                 = false
            dbInMemory                    = true
            additionalFlags               = ""
            database {
                cache                       = ""
                key                         = ""
            }
        }
        annotation {
            clusterOptions                = ""
            fetchArtifact                 = false
            dbInMemory                    = true
            additionalFlags               = ""
            database {
                cache                       = ""
                key                         = ""
            }
            extract {
                types                       = "caz,cog"
                max_evalue                  = 0.00001
                min_score                   = 0
                fetchArtifact               = false
            }
        }
    }
    
    // Parameter validation logic can also go here
    // This runs when the config is loaded
    // validateParams = {
    //     // Add specific validation functions here
    // }
}